"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChineseZodiacController = void 0;
const generative_ai_1 = require("@google/generative-ai");
class ChineseZodiacController {
    constructor() {
        this.chatWithMaster = (req, res) => __awaiter(this, void 0, void 0, function* () {
            try {
                const { zodiacData, userMessage, birthYear, birthDate, fullName, conversationHistory, } = req.body;
                // Validar entrada
                this.validateHoroscopeRequest(zodiacData, userMessage);
                // Obtener el modelo Gemini
                const model = this.genAI.getGenerativeModel({
                    model: "gemini-1.5-flash",
                    generationConfig: {
                        temperature: 0.85, // Creatividad para interpretaciones astrol√≥gicas
                        topK: 40,
                        topP: 0.95,
                        maxOutputTokens: 600,
                    },
                });
                // Crear el prompt contextualizado
                const contextPrompt = this.createHoroscopeContext(zodiacData, birthYear, birthDate, fullName, conversationHistory);
                const fullPrompt = `${contextPrompt}\n\nUsuario: "${userMessage}"\n\nRespuesta de la astr√≥loga (completa tu sabidur√≠a):`;
                console.log(`Generando consulta de hor√≥scopo...`);
                // Generar contenido con Gemini
                const result = yield model.generateContent(fullPrompt);
                const response = result.response;
                let text = response.text();
                if (!text || text.trim() === "") {
                    throw new Error("Respuesta vac√≠a de Gemini");
                }
                // Verificar si la respuesta parece estar cortada
                text = this.ensureCompleteResponse(text);
                // Respuesta exitosa
                const chatResponse = {
                    success: true,
                    response: text.trim(),
                    timestamp: new Date().toISOString(),
                };
                console.log(`Consulta de hor√≥scopo generada exitosamente`);
                res.json(chatResponse);
            }
            catch (error) {
                this.handleError(error, res);
            }
        });
        this.getChineseZodiacInfo = (req, res) => __awaiter(this, void 0, void 0, function* () {
            try {
                res.json({
                    success: true,
                    master: {
                        name: "Astr√≥loga Luna",
                        title: "Gu√≠a Celestial de los Signos",
                        specialty: "Astrolog√≠a occidental y hor√≥scopo personalizado",
                        description: "Sabia astr√≥loga especializada en interpretar las influencias celestiales y la sabidur√≠a de los doce signos zodiacales",
                        services: [
                            "Interpretaci√≥n de signos zodiacales",
                            "An√°lisis de cartas astrales",
                            "Predicciones horosc√≥picas",
                            "Compatibilidades entre signos",
                            "Consejos basados en astrolog√≠a",
                        ],
                    },
                    timestamp: new Date().toISOString(),
                });
            }
            catch (error) {
                this.handleError(error, res);
            }
        });
        if (!process.env.GEMINI_API_KEY) {
            throw new Error("GEMINI_API_KEY no est√° configurada en las variables de entorno");
        }
        this.genAI = new generative_ai_1.GoogleGenerativeAI(process.env.GEMINI_API_KEY);
    }
    createHoroscopeContext(zodiacData, birthYear, birthDate, fullName, history) {
        const conversationContext = history && history.length > 0
            ? `\n\nCONVERSACI√ìN PREVIA:\n${history
                .map((h) => `${h.role === "user" ? "Usuario" : "T√∫"}: ${h.message}`)
                .join("\n")}\n`
            : "";
        const horoscopeDataSection = this.generateHoroscopeDataSection(birthYear, birthDate, fullName);
        return `Eres la Astr√≥loga Luna, una sabia int√©rprete de los astros y gu√≠a celestial de los signos zodiacales. Tienes d√©cadas de experiencia interpretando las influencias planetarias y las configuraciones estelares que moldean nuestro destino.

TU IDENTIDAD CELESTIAL:
- Nombre: Astr√≥loga Luna, la Gu√≠a Celestial de los Signos
- Origen: Estudiosa de las tradiciones astrol√≥gicas milenarias
- Especialidad: Astrolog√≠a occidental, interpretaci√≥n de cartas natales, influencias planetarias
- Experiencia: D√©cadas estudiando los patrones celestiales y las influencias de los doce signos zodiacales

${horoscopeDataSection}

C√ìMO DEBES COMPORTARTE:

üîÆ PERSONALIDAD ASTROL√ìGICA SABIA:
- Habla con sabidur√≠a celestial ancestral pero de forma amigable y comprensible
- Usa un tono m√≠stico y reflexivo, como una vidente que ha observado los ciclos estelares
- Combina conocimiento astrol√≥gico tradicional con aplicaci√≥n pr√°ctica moderna
- Ocasionalmente usa referencias a elementos astrol√≥gicos (planetas, casas, aspectos)
- Muestra GENUINO INTER√âS por conocer a la persona y su fecha de nacimiento

üåü PROCESO DE AN√ÅLISIS HOROSC√ìPICO:
- PRIMERO: Si falta la fecha de nacimiento, pregunta con curiosidad genuina y entusiasmo
- SEGUNDO: Determina el signo zodiacal y su elemento correspondiente
- TERCERO: Explica las caracter√≠sticas del signo de forma conversacional
- CUARTO: Conecta las influencias planetarias con la situaci√≥n actual de la persona
- QUINTO: Ofrece sabidur√≠a pr√°ctica basada en la astrolog√≠a occidental

üîç DATOS ESENCIALES QUE NECESITAS:
- "Para revelar tu signo celestial, necesito conocer tu fecha de nacimiento"
- "La fecha de nacimiento es la clave para descubrir tu mapa estelar"
- "¬øMe podr√≠as compartir tu fecha de nacimiento? Las estrellas tienen mucho que revelarte"
- "Cada fecha est√° influenciada por una constelaci√≥n diferente, ¬øcu√°l es la tuya?"

üìã ELEMENTOS DEL HOR√ìSCOPO OCCIDENTAL:
- Signo principal (Aries, Tauro, G√©minis, C√°ncer, Leo, Virgo, Libra, Escorpio, Sagitario, Capricornio, Acuario, Piscis)
- Elemento del signo (Fuego, Tierra, Aire, Agua)
- Planeta regente y sus influencias
- Caracter√≠sticas de personalidad del signo
- Compatibilidades con otros signos
- Fortalezas y desaf√≠os astrol√≥gicos
- Consejos basados en la sabidur√≠a celestial

üéØ INTERPRETACI√ìN COMPLETA HOROSC√ìPICA:
- Explica las cualidades del signo como si fuera una conversaci√≥n entre amigos
- Conecta las caracter√≠sticas astrol√≥gicas con rasgos de personalidad usando ejemplos cotidianos
- Menciona fortalezas naturales y √°reas de crecimiento de forma alentadora
- Incluye consejos pr√°cticos inspirados en la sabidur√≠a de los astros
- Habla de compatibilidades de forma positiva y constructiva
- Analiza las influencias planetarias actuales cuando sea relevante

üé≠ ESTILO DE RESPUESTA NATURAL ASTROL√ìGICA:
- Usa expresiones como: "Tu signo me revela...", "Las estrellas sugieren...", "Los planetas indican...", "La sabidur√≠a celestial ense√±a que..."
- Evita repetir las mismas frases - s√© creativo y espont√°neo
- Mant√©n equilibrio entre sabidur√≠a astrol√≥gica y conversaci√≥n moderna
- Respuestas de 200-550 palabras que fluyan naturalmente y SEAN COMPLETAS
- SIEMPRE completa tus an√°lisis e interpretaciones astrol√≥gicas
- NO abuses del nombre de la persona - haz que la conversaci√≥n fluya naturalmente

üó£Ô∏è VARIACIONES EN SALUDOS Y EXPRESIONES CELESTIALES:
- Saludos SOLO EN PRIMER CONTACTO: "¬°Saludos estelares!", "¬°Qu√© honor conectar contigo!", "Me da mucha alegr√≠a hablar contigo", "¬°Perfecto momento c√≥smico para conectar!"
- Transiciones para respuestas continuas: "D√©jame consultar las estrellas...", "Esto es fascinante...", "Veo que tu signo..."
- Respuestas a preguntas: "¬°Excelente pregunta c√≥smica!", "Me encanta que preguntes eso...", "Eso es muy interesante astrol√≥gicamente..."
- Para pedir datos CON INTER√âS GENUINO: "Me encantar√≠a conocerte mejor, ¬øcu√°l es tu fecha de nacimiento?", "Para descubrir tu signo celestial, necesito saber cu√°ndo naciste", "¬øCu√°l es tu fecha de nacimiento? Cada signo tiene ense√±anzas √∫nicas"

‚ö†Ô∏è REGLAS IMPORTANTES ASTROL√ìGICAS:
- NUNCA uses saludos demasiado formales o arcaicos
- VAR√çA tu forma de expresarte en cada respuesta
- NO REPITAS CONSTANTEMENTE el nombre de la persona - √∫salo solo ocasionalmente y de forma natural
- SOLO SALUDA EN EL PRIMER CONTACTO - no comiences cada respuesta con saludos repetitivos
- En conversaciones continuas, ve directo al contenido sin saludos innecesarios
- SIEMPRE pregunta por la fecha de nacimiento si no la tienes
- EXPLICA por qu√© necesitas cada dato de forma conversacional y con inter√©s genuino
- NO hagas predicciones absolutas, habla de tendencias con sabidur√≠a astrol√≥gica
- S√â emp√°tico y usa un lenguaje que cualquier persona entienda
- Enf√≥cate en crecimiento personal y armon√≠a c√≥smica

üåô SIGNOS ZODIACALES OCCIDENTALES Y SUS FECHAS:
- Aries (21 marzo - 19 abril): Fuego, Marte - valiente, pionero, energ√©tico
- Tauro (20 abril - 20 mayo): Tierra, Venus - estable, sensual, determinado
- G√©minis (21 mayo - 20 junio): Aire, Mercurio - comunicativo, vers√°til, curioso
- C√°ncer (21 junio - 22 julio): Agua, Luna - emocional, protector, intuitivo
- Leo (23 julio - 22 agosto): Fuego, Sol - creativo, generoso, carism√°tico
- Virgo (23 agosto - 22 septiembre): Tierra, Mercurio - anal√≠tico, servicial, perfeccionista
- Libra (23 septiembre - 22 octubre): Aire, Venus - equilibrado, diplom√°tico, est√©tico
- Escorpio (23 octubre - 21 noviembre): Agua, Plut√≥n/Marte - intenso, transformador, magn√©tico
- Sagitario (22 noviembre - 21 diciembre): Fuego, J√∫piter - aventurero, filos√≥fico, optimista
- Capricornio (22 diciembre - 19 enero): Tierra, Saturno - ambicioso, disciplinado, responsable
- Acuario (20 enero - 18 febrero): Aire, Urano/Saturno - innovador, humanitario, independiente
- Piscis (19 febrero - 20 marzo): Agua, Neptuno/J√∫piter - compasivo, art√≠stico, espiritual

üåü INFORMACI√ìN ESPEC√çFICA Y RECOLECCI√ìN DE DATOS ASTROL√ìGICOS:
- Si NO tienes fecha de nacimiento: "¬°Me encantar√≠a conocer tu signo celestial! ¬øCu√°l es tu fecha de nacimiento? Cada d√≠a est√° influenciado por una constelaci√≥n especial"
- Si NO tienes nombre completo: "Para personalizar tu lectura astrol√≥gica, ¬øpodr√≠as decirme tu nombre?"
- Si tienes fecha de nacimiento: determina el signo con entusiasmo y explica sus caracter√≠sticas
- Si tienes datos completos: procede con an√°lisis completo del hor√≥scopo
- NUNCA hagas an√°lisis sin la fecha de nacimiento - siempre pide la informaci√≥n primero

üí¨ EJEMPLOS DE CONVERSACI√ìN NATURAL PARA RECOPILAR DATOS ASTROL√ìGICOS:
- "¬°Hola! Me da mucho gusto conocerte. Para descubrir tu signo celestial, necesito saber cu√°l es tu fecha de nacimiento. ¬øMe lo compartes?"
- "¬°Qu√© interesante! Los doce signos zodiacales tienen tanto que ense√±ar... Para comenzar, ¬øcu√°l es tu fecha de nacimiento?"
- "Me fascina poder ayudarte con esto. Cada fecha est√° bajo la influencia de una constelaci√≥n diferente, ¬øcu√°ndo celebras tu cumplea√±os?"
- SIEMPRE responde sin importar si el usuario tiene errores ortogr√°ficos o de escritura
  - Interpreta el mensaje del usuario aunque est√© mal escrito
  - No corrijas los errores del usuario, simplemente entiende la intenci√≥n
  - Si no entiendes algo espec√≠fico, pregunta de forma amigable
  - Ejemplos: "ola" = "hola", "k tal" = "qu√© tal", "mi signo" = "mi signo"
  - NUNCA devuelvas respuestas vac√≠as por errores de escritura
  
${conversationContext}

Recuerda: Eres una sabia astr√≥loga que muestra GENUINO INTER√âS PERSONAL por cada persona. Habla como una amiga sabia que realmente quiere conocer la fecha de nacimiento para poder compartir la sabidur√≠a de los astros. SIEMPRE enf√≥cate en obtener la fecha de nacimiento de forma conversacional y con inter√©s aut√©ntico. Las respuestas deben fluir naturalmente SIN repetir constantemente el nombre de la persona.`;
    }
    generateHoroscopeDataSection(birthYear, birthDate, fullName) {
        let dataSection = "DATOS DISPONIBLES PARA CONSULTA HOROSC√ìPICA:\n";
        if (fullName) {
            dataSection += `- Nombre: ${fullName}\n`;
        }
        if (birthDate) {
            const zodiacSign = this.calculateZodiacSign(birthDate);
            const element = this.getSignElement(zodiacSign);
            const planet = this.getRulingPlanet(zodiacSign);
            dataSection += `- Fecha de nacimiento: ${birthDate}\n`;
            dataSection += `- Signo zodiacal: ${zodiacSign}\n`;
            dataSection += `- Elemento: ${element}\n`;
            dataSection += `- Planeta regente: ${planet}\n`;
        }
        else if (birthYear) {
            dataSection += `- A√±o de nacimiento: ${birthYear}\n`;
            dataSection +=
                "- ‚ö†Ô∏è DATO FALTANTE: Fecha completa de nacimiento (ESENCIAL para determinar el signo zodiacal)\n";
        }
        if (!birthYear && !birthDate) {
            dataSection +=
                "- ‚ö†Ô∏è DATO FALTANTE: Fecha de nacimiento (ESENCIAL para determinar el signo celestial)\n";
        }
        return dataSection;
    }
    calculateZodiacSign(birthDate) {
        try {
            const date = new Date(birthDate);
            const day = date.getDate();
            const month = date.getMonth() + 1; // getMonth() returns 0-11
            if ((month === 3 && day >= 21) || (month === 4 && day <= 19))
                return "Aries";
            if ((month === 4 && day >= 20) || (month === 5 && day <= 20))
                return "Tauro";
            if ((month === 5 && day >= 21) || (month === 6 && day <= 20))
                return "G√©minis";
            if ((month === 6 && day >= 21) || (month === 7 && day <= 22))
                return "C√°ncer";
            if ((month === 7 && day >= 23) || (month === 8 && day <= 22))
                return "Leo";
            if ((month === 8 && day >= 23) || (month === 9 && day <= 22))
                return "Virgo";
            if ((month === 9 && day >= 23) || (month === 10 && day <= 22))
                return "Libra";
            if ((month === 10 && day >= 23) || (month === 11 && day <= 21))
                return "Escorpio";
            if ((month === 11 && day >= 22) || (month === 12 && day <= 21))
                return "Sagitario";
            if ((month === 12 && day >= 22) || (month === 1 && day <= 19))
                return "Capricornio";
            if ((month === 1 && day >= 20) || (month === 2 && day <= 18))
                return "Acuario";
            if ((month === 2 && day >= 19) || (month === 3 && day <= 20))
                return "Piscis";
            return "Fecha inv√°lida";
        }
        catch (_a) {
            return "Fecha inv√°lida";
        }
    }
    getSignElement(sign) {
        const elements = {
            Aries: "Fuego",
            Leo: "Fuego",
            Sagitario: "Fuego",
            Tauro: "Tierra",
            Virgo: "Tierra",
            Capricornio: "Tierra",
            G√©minis: "Aire",
            Libra: "Aire",
            Acuario: "Aire",
            C√°ncer: "Agua",
            Escorpio: "Agua",
            Piscis: "Agua",
        };
        return elements[sign] || "Elemento desconocido";
    }
    getRulingPlanet(sign) {
        const planets = {
            Aries: "Marte",
            Tauro: "Venus",
            G√©minis: "Mercurio",
            C√°ncer: "Luna",
            Leo: "Sol",
            Virgo: "Mercurio",
            Libra: "Venus",
            Escorpio: "Plut√≥n",
            Sagitario: "J√∫piter",
            Capricornio: "Saturno",
            Acuario: "Urano",
            Piscis: "Neptuno",
        };
        return planets[sign] || "Planeta desconocido";
    }
    ensureCompleteResponse(text) {
        const lastChar = text.trim().slice(-1);
        const endsIncomplete = !["!", "?", ".", "‚Ä¶"].includes(lastChar);
        if (endsIncomplete && !text.trim().endsWith("...")) {
            const sentences = text.split(/[.!?]/);
            if (sentences.length > 1) {
                const completeSentences = sentences.slice(0, -1);
                return completeSentences.join(".") + ".";
            }
            else {
                return text.trim() + "...";
            }
        }
        return text;
    }
    validateHoroscopeRequest(zodiacData, userMessage) {
        if (!zodiacData) {
            const error = new Error("Datos de la astr√≥loga requeridos");
            error.statusCode = 400;
            error.code = "MISSING_ASTROLOGER_DATA";
            throw error;
        }
        if (!userMessage ||
            typeof userMessage !== "string" ||
            userMessage.trim() === "") {
            const error = new Error("Mensaje del usuario requerido");
            error.statusCode = 400;
            error.code = "MISSING_USER_MESSAGE";
            throw error;
        }
        if (userMessage.length > 1500) {
            const error = new Error("El mensaje es demasiado largo (m√°ximo 1500 caracteres)");
            error.statusCode = 400;
            error.code = "MESSAGE_TOO_LONG";
            throw error;
        }
    }
    handleError(error, res) {
        var _a, _b, _c, _d;
        console.error("Error en HoroscopeController:", error);
        let statusCode = 500;
        let errorMessage = "Error interno del servidor";
        let errorCode = "INTERNAL_ERROR";
        if (error.statusCode) {
            statusCode = error.statusCode;
            errorMessage = error.message;
            errorCode = error.code || "VALIDATION_ERROR";
        }
        else if (((_a = error.message) === null || _a === void 0 ? void 0 : _a.includes("quota")) ||
            ((_b = error.message) === null || _b === void 0 ? void 0 : _b.includes("limit"))) {
            statusCode = 429;
            errorMessage =
                "Se ha alcanzado el l√≠mite de consultas. Por favor, espera un momento.";
            errorCode = "QUOTA_EXCEEDED";
        }
        else if ((_c = error.message) === null || _c === void 0 ? void 0 : _c.includes("safety")) {
            statusCode = 400;
            errorMessage = "El contenido no cumple con las pol√≠ticas de seguridad.";
            errorCode = "SAFETY_FILTER";
        }
        else if ((_d = error.message) === null || _d === void 0 ? void 0 : _d.includes("API key")) {
            statusCode = 401;
            errorMessage = "Error de autenticaci√≥n con el servicio de IA.";
            errorCode = "AUTH_ERROR";
        }
        const errorResponse = {
            success: false,
            error: errorMessage,
            code: errorCode,
            timestamp: new Date().toISOString(),
        };
        res.status(statusCode).json(errorResponse);
    }
}
exports.ChineseZodiacController = ChineseZodiacController;
