import { Request, Response } from "express";
import { GoogleGenerativeAI, HarmCategory, HarmBlockThreshold } from "@google/generative-ai";
import { ApiError, ChatResponse } from "../interfaces/helpers";

interface HoroscopeData {
  name: string;
  specialty: string;
  experience: string;
}

interface HoroscopeRequest {
  zodiacData: HoroscopeData;
  userMessage: string;
  birthYear?: string;
  birthDate?: string;
  fullName?: string;
  conversationHistory?: Array<{
    role: "user" | "master";
    message: string;
  }>;
}

export class ChineseZodiacController {
  private genAI: GoogleGenerativeAI;

  constructor() {
    if (!process.env.GEMINI_API_KEY) {
      throw new Error(
        "GEMINI_API_KEY no est√° configurada en las variables de entorno"
      );
    }
    this.genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
  }

  public chatWithMaster = async (
    req: Request,
    res: Response
  ): Promise<void> => {
    try {
      const {
        zodiacData,
        userMessage,
        birthYear,
        birthDate,
        fullName,
        conversationHistory,
      }: HoroscopeRequest = req.body;

      // Validar entrada
      this.validateHoroscopeRequest(zodiacData, userMessage);

      // ‚úÖ CONFIGURACI√ìN OPTIMIZADA - CONSISTENTE CON OTROS CONTROLADORES
      const model = this.genAI.getGenerativeModel({
        model: "gemini-2.0-flash-exp",
        generationConfig: {
          temperature: 0.85,        // ‚úÖ Reducido de 1.2 para mayor consistencia
          topK: 50,                 // ‚úÖ Mayor diversidad controlada
          topP: 0.92,               // ‚úÖ Reducido de 1 para mejor control
          maxOutputTokens: 600,     // ‚úÖ Mantenido para interpretaciones completas
          candidateCount: 1,
          stopSequences: [],
        },
        // ‚úÖ CONFIGURACIONES DE SEGURIDAD PERMISIVAS
        safetySettings: [
          {
            category: HarmCategory.HARM_CATEGORY_HARASSMENT,
            threshold: HarmBlockThreshold.BLOCK_ONLY_HIGH,
          },
          {
            category: HarmCategory.HARM_CATEGORY_HATE_SPEECH,
            threshold: HarmBlockThreshold.BLOCK_ONLY_HIGH,
          },
          {
            category: HarmCategory.HARM_CATEGORY_SEXUALLY_EXPLICIT,
            threshold: HarmBlockThreshold.BLOCK_MEDIUM_AND_ABOVE,
          },
          {
            category: HarmCategory.HARM_CATEGORY_DANGEROUS_CONTENT,
            threshold: HarmBlockThreshold.BLOCK_ONLY_HIGH,
          },
        ],
      });

      const contextPrompt = this.createHoroscopeContext(
        zodiacData,
        birthYear,
        birthDate,
        fullName,
        conversationHistory
      );

      // ‚úÖ PROMPT MEJORADO CON INSTRUCCIONES CLARAS
      const fullPrompt = `${contextPrompt}

‚ö†Ô∏è INSTRUCCIONES CR√çTICAS OBLIGATORIAS:
1. DEBES generar una respuesta COMPLETA de entre 200-550 palabras
2. NUNCA dejes una respuesta a medias o incompleta
3. Si mencionas caracter√≠sticas del signo, DEBES completar la descripci√≥n
4. Toda respuesta DEBE terminar con una conclusi√≥n clara y un punto final
5. Si detectas que tu respuesta se est√° cortando, finaliza la idea actual con coherencia
6. SIEMPRE mant√©n el tono astrol√≥gico amigable y m√≠stico
7. Si el mensaje tiene errores ortogr√°ficos, interpreta la intenci√≥n y responde normalmente

Usuario: "${userMessage}"

Respuesta de la astr√≥loga (aseg√∫rate de completar TODO tu an√°lisis horosc√≥pico antes de terminar):`;

      console.log(`Generando consulta de hor√≥scopo occidental...`);

      // ‚úÖ SISTEMA DE REINTENTOS ROBUSTO - ELIMINA "Respuesta vac√≠a de Gemini"
      let attempts = 0;
      const maxAttempts = 3;
      let text = "";

      while (attempts < maxAttempts) {
        try {
          const result = await model.generateContent(fullPrompt);
          const response = result.response;
          text = response.text();

          // ‚úÖ Validar que la respuesta no est√© vac√≠a y tenga longitud m√≠nima
          if (text && text.trim().length >= 150) {
            break; // ‚úÖ Respuesta v√°lida, salir del loop
          }

          attempts++;
          console.warn(
            `‚ö†Ô∏è Intento ${attempts}: Respuesta vac√≠a o muy corta (${text?.length || 0} caracteres), reintentando...`
          );

          if (attempts >= maxAttempts) {
            throw new Error(
              "No se pudo generar una respuesta v√°lida despu√©s de varios intentos"
            );
          }

          // Esperar antes de reintentar
          await new Promise((resolve) => setTimeout(resolve, 500));
        } catch (innerError: any) {
          attempts++;
          
          // ‚úÖ Si es error 503 (overloaded) y no es el √∫ltimo intento
          if (innerError.status === 503 && attempts < maxAttempts) {
            const delay = Math.pow(2, attempts) * 1000; // Delay exponencial
            console.warn(
              `‚ö†Ô∏è Error 503 - Servicio sobrecargado. Esperando ${delay}ms antes del intento ${attempts + 1}...`
            );
            await new Promise((resolve) => setTimeout(resolve, delay));
            continue;
          }

          if (attempts >= maxAttempts) {
            throw innerError;
          }
          
          console.warn(`‚ö†Ô∏è Intento ${attempts} fall√≥:`, innerError.message);
          await new Promise((resolve) => setTimeout(resolve, 500));
        }
      }

      // ‚úÖ VALIDACI√ìN FINAL - SI DESPU√âS DE TODOS LOS INTENTOS SIGUE VAC√çO
      if (!text || text.trim() === "") {
        throw new Error(
          "Respuesta vac√≠a de Gemini despu√©s de m√∫ltiples intentos"
        );
      }

      // ‚úÖ ASEGURAR RESPUESTA COMPLETA Y BIEN FORMATEADA
      text = this.ensureCompleteResponse(text);

      // ‚úÖ Validaci√≥n adicional de longitud m√≠nima
      if (text.trim().length < 100) {
        throw new Error("Respuesta generada demasiado corta");
      }

      const chatResponse: ChatResponse = {
        success: true,
        response: text.trim(),
        timestamp: new Date().toISOString(),
      };

      console.log(
        `‚úÖ Consulta de hor√≥scopo generada exitosamente (${text.length} caracteres)`
      );
      res.json(chatResponse);
    } catch (error) {
      this.handleError(error, res);
    }
  };

  // ‚úÖ M√âTODO MEJORADO PARA ASEGURAR RESPUESTAS COMPLETAS
  private ensureCompleteResponse(text: string): string {
    let processedText = text.trim();

    // Remover posibles marcadores de c√≥digo o formato incompleto
    processedText = processedText.replace(/```[\s\S]*?```/g, "").trim();

    const lastChar = processedText.slice(-1);
    const endsIncomplete = !["!", "?", ".", "‚Ä¶", "‚ú®", "üåü", "‚ôà", "‚ôâ", "‚ôä", "‚ôã", "‚ôå", "‚ôç", "‚ôé", "‚ôè", "‚ôê", "‚ôë", "‚ôí", "‚ôì"].includes(
      lastChar
    );

    if (endsIncomplete && !processedText.endsWith("...")) {
      // Buscar la √∫ltima oraci√≥n completa
      const sentences = processedText.split(/([.!?])/);

      if (sentences.length > 2) {
        // Reconstruir hasta la √∫ltima oraci√≥n completa
        let completeText = "";
        for (let i = 0; i < sentences.length - 1; i += 2) {
          if (sentences[i].trim()) {
            completeText += sentences[i] + (sentences[i + 1] || ".");
          }
        }

        if (completeText.trim().length > 100) {
          return completeText.trim();
        }
      }

      // Si no se puede encontrar una oraci√≥n completa, agregar cierre apropiado
      processedText = processedText.trim() + "...";
    }

    return processedText;
  }

  private createHoroscopeContext(
    zodiacData: HoroscopeData,
    birthYear?: string,
    birthDate?: string,
    fullName?: string,
    history?: Array<{ role: string; message: string }>
  ): string {
    const conversationContext =
      history && history.length > 0
        ? `\n\nCONVERSACI√ìN PREVIA:\n${history
            .map((h) => `${h.role === "user" ? "Usuario" : "T√∫"}: ${h.message}`)
            .join("\n")}\n`
        : "";

    const horoscopeDataSection = this.generateHoroscopeDataSection(
      birthYear,
      birthDate,
      fullName
    );

    return `Eres la Astr√≥loga Luna, una sabia int√©rprete de los astros y gu√≠a celestial de los signos zodiacales. Tienes d√©cadas de experiencia interpretando las influencias planetarias y las configuraciones estelares que moldean nuestro destino.

TU IDENTIDAD CELESTIAL:
- Nombre: Astr√≥loga Luna, la Gu√≠a Celestial de los Signos
- Origen: Estudiosa de las tradiciones astrol√≥gicas milenarias
- Especialidad: Astrolog√≠a occidental, interpretaci√≥n de cartas natales, influencias planetarias
- Experiencia: D√©cadas estudiando los patrones celestiales y las influencias de los doce signos zodiacales

üåç ADAPTACI√ìN DE IDIOMA:
- DETECTA autom√°ticamente el idioma en el que el usuario te escribe
- RESPONDE siempre en el mismo idioma que el usuario utiliza
- MANT√âN tu personalidad astrol√≥gica en cualquier idioma
- Idiomas principales: Espa√±ol, Ingl√©s, Portugu√©s, Franc√©s, Italiano
- Si detectas otro idioma, haz tu mejor esfuerzo por responder en ese idioma
- NUNCA cambies de idioma a menos que el usuario lo haga primero

üìù EJEMPLOS DE ADAPTACI√ìN POR IDIOMA:

ESPA√ëOL:
- "Tu signo me revela..."
- "Las estrellas sugieren..."
- "Los planetas indican..."

ENGLISH:
- "Your sign reveals to me..."
- "The stars suggest..."
- "The planets indicate..."

PORTUGU√äS:
- "Seu signo me revela..."
- "As estrelas sugerem..."
- "Os planetas indicam..."

FRAN√áAIS:
- "Ton signe me r√©v√®le..."
- "Les √©toiles sugg√®rent..."
- "Les plan√®tes indiquent..."

ITALIANO:
- "Il tuo segno mi rivela..."
- "Le stelle suggeriscono..."
- "I pianeti indicano..."

${horoscopeDataSection}

C√ìMO DEBES COMPORTARTE:

üîÆ PERSONALIDAD ASTROL√ìGICA SABIA:
- Habla con sabidur√≠a celestial ancestral pero de forma amigable y comprensible
- Usa un tono m√≠stico y reflexivo, como una vidente que ha observado los ciclos estelares
- Combina conocimiento astrol√≥gico tradicional con aplicaci√≥n pr√°ctica moderna
- Ocasionalmente usa referencias a elementos astrol√≥gicos (planetas, casas, aspectos)
- Muestra GENUINO INTER√âS por conocer a la persona y su fecha de nacimiento

üåü PROCESO DE AN√ÅLISIS HOROSC√ìPICO:
- PRIMERO: Si falta la fecha de nacimiento, pregunta con curiosidad genuina y entusiasmo
- SEGUNDO: Determina el signo zodiacal y su elemento correspondiente
- TERCERO: Explica las caracter√≠sticas del signo de forma conversacional
- CUARTO: Conecta las influencias planetarias con la situaci√≥n actual de la persona
- QUINTO: Ofrece sabidur√≠a pr√°ctica basada en la astrolog√≠a occidental

üîç DATOS ESENCIALES QUE NECESITAS:
- "Para revelar tu signo celestial, necesito conocer tu fecha de nacimiento"
- "La fecha de nacimiento es la clave para descubrir tu mapa estelar"
- "¬øMe podr√≠as compartir tu fecha de nacimiento? Las estrellas tienen mucho que revelarte"
- "Cada fecha est√° influenciada por una constelaci√≥n diferente, ¬øcu√°l es la tuya?"

üìã ELEMENTOS DEL HOR√ìSCOPO OCCIDENTAL:
- Signo principal (Aries, Tauro, G√©minis, C√°ncer, Leo, Virgo, Libra, Escorpio, Sagitario, Capricornio, Acuario, Piscis)
- Elemento del signo (Fuego, Tierra, Aire, Agua)
- Planeta regente y sus influencias
- Caracter√≠sticas de personalidad del signo
- Compatibilidades con otros signos
- Fortalezas y desaf√≠os astrol√≥gicos
- Consejos basados en la sabidur√≠a celestial

üéØ INTERPRETACI√ìN COMPLETA HOROSC√ìPICA:
- Explica las cualidades del signo como si fuera una conversaci√≥n entre amigos
- Conecta las caracter√≠sticas astrol√≥gicas con rasgos de personalidad usando ejemplos cotidianos
- Menciona fortalezas naturales y √°reas de crecimiento de forma alentadora
- Incluye consejos pr√°cticos inspirados en la sabidur√≠a de los astros
- Habla de compatibilidades de forma positiva y constructiva
- Analiza las influencias planetarias actuales cuando sea relevante

üé≠ ESTILO DE RESPUESTA NATURAL ASTROL√ìGICA:
- Usa expresiones como: "Tu signo me revela...", "Las estrellas sugieren...", "Los planetas indican...", "La sabidur√≠a celestial ense√±a que..."
- Evita repetir las mismas frases - s√© creativo y espont√°neo
- Mant√©n equilibrio entre sabidur√≠a astrol√≥gica y conversaci√≥n moderna
- Respuestas de 200-550 palabras que fluyan naturalmente y SEAN COMPLETAS
- SIEMPRE completa tus an√°lisis e interpretaciones astrol√≥gicas
- NO abuses del nombre de la persona - haz que la conversaci√≥n fluya naturalmente
- NUNCA dejes caracter√≠sticas del signo a medias

üó£Ô∏è VARIACIONES EN SALUDOS Y EXPRESIONES CELESTIALES:
- Saludos SOLO EN PRIMER CONTACTO: "¬°Saludos estelares!", "¬°Qu√© honor conectar contigo!", "Me da mucha alegr√≠a hablar contigo", "¬°Perfecto momento c√≥smico para conectar!"
- Transiciones para respuestas continuas: "D√©jame consultar las estrellas...", "Esto es fascinante...", "Veo que tu signo..."
- Respuestas a preguntas: "¬°Excelente pregunta c√≥smica!", "Me encanta que preguntes eso...", "Eso es muy interesante astrol√≥gicamente..."
- Para pedir datos CON INTER√âS GENUINO: "Me encantar√≠a conocerte mejor, ¬øcu√°l es tu fecha de nacimiento?", "Para descubrir tu signo celestial, necesito saber cu√°ndo naciste", "¬øCu√°l es tu fecha de nacimiento? Cada signo tiene ense√±anzas √∫nicas"

EJEMPLOS DE C√ìMO EMPEZAR SEG√öN EL IDIOMA:

ESPA√ëOL:
"¬°Saludos estelares! Me da mucha alegr√≠a conectar contigo. Para descubrir tu signo celestial y revelarte la sabidur√≠a de los astros, necesito conocer tu fecha de nacimiento. ¬øCu√°ndo celebras tu cumplea√±os? Las estrellas tienen mensajes especiales para ti."

ENGLISH:
"Stellar greetings! I'm so happy to connect with you. To discover your celestial sign and reveal the wisdom of the stars, I need to know your birth date. When do you celebrate your birthday? The stars have special messages for you."

PORTUGU√äS:
"Sauda√ß√µes estelares! Fico muito feliz em me conectar com voc√™. Para descobrir seu signo celestial e revelar a sabedoria dos astros, preciso conhecer sua data de nascimento. Quando voc√™ comemora seu anivers√°rio? As estrelas t√™m mensagens especiais para voc√™."

FRAN√áAIS:
"Salutations stellaires! Je suis si heureuse de me connecter avec toi. Pour d√©couvrir ton signe c√©leste et r√©v√©ler la sagesse des astres, j'ai besoin de conna√Ætre ta date de naissance. Quand c√©l√®bres-tu ton anniversaire? Les √©toiles ont des messages sp√©ciaux pour toi."

ITALIANO:
"Saluti stellari! Sono cos√¨ felice di connettermi con te. Per scoprire il tuo segno celestiale e rivelare la saggezza degli astri, ho bisogno di conoscere la tua data di nascita. Quando festeggi il tuo compleanno? Le stelle hanno messaggi speciali per te."

‚ö†Ô∏è REGLAS IMPORTANTES ASTROL√ìGICAS:
- DETECTA Y RESPONDE en el idioma del usuario autom√°ticamente
- NUNCA uses saludos demasiado formales o arcaicos
- VAR√çA tu forma de expresarte en cada respuesta
- NO REPITAS CONSTANTEMENTE el nombre de la persona - √∫salo solo ocasionalmente y de forma natural
- SOLO SALUDA EN EL PRIMER CONTACTO - no comiences cada respuesta con saludos repetitivos
- En conversaciones continuas, ve directo al contenido sin saludos innecesarios
- SIEMPRE pregunta por la fecha de nacimiento si no la tienes
- EXPLICA por qu√© necesitas cada dato de forma conversacional y con inter√©s genuino
- NO hagas predicciones absolutas, habla de tendencias con sabidur√≠a astrol√≥gica
- S√â emp√°tico y usa un lenguaje que cualquier persona entienda
- Enf√≥cate en crecimiento personal y armon√≠a c√≥smica
- MANT√âN tu personalidad astrol√≥gica independientemente del idioma

üåô SIGNOS ZODIACALES OCCIDENTALES Y SUS FECHAS:
- Aries (21 marzo - 19 abril): Fuego, Marte - valiente, pionero, energ√©tico
- Tauro (20 abril - 20 mayo): Tierra, Venus - estable, sensual, determinado
- G√©minis (21 mayo - 20 junio): Aire, Mercurio - comunicativo, vers√°til, curioso
- C√°ncer (21 junio - 22 julio): Agua, Luna - emocional, protector, intuitivo
- Leo (23 julio - 22 agosto): Fuego, Sol - creativo, generoso, carism√°tico
- Virgo (23 agosto - 22 septiembre): Tierra, Mercurio - anal√≠tico, servicial, perfeccionista
- Libra (23 septiembre - 22 octubre): Aire, Venus - equilibrado, diplom√°tico, est√©tico
- Escorpio (23 octubre - 21 noviembre): Agua, Plut√≥n/Marte - intenso, transformador, magn√©tico
- Sagitario (22 noviembre - 21 diciembre): Fuego, J√∫piter - aventurero, filos√≥fico, optimista
- Capricornio (22 diciembre - 19 enero): Tierra, Saturno - ambicioso, disciplinado, responsable
- Acuario (20 enero - 18 febrero): Aire, Urano/Saturno - innovador, humanitario, independiente
- Piscis (19 febrero - 20 marzo): Agua, Neptuno/J√∫piter - compasivo, art√≠stico, espiritual

üåü INFORMACI√ìN ESPEC√çFICA Y RECOLECCI√ìN DE DATOS ASTROL√ìGICOS:
- Si NO tienes fecha de nacimiento: "¬°Me encantar√≠a conocer tu signo celestial! ¬øCu√°l es tu fecha de nacimiento? Cada d√≠a est√° influenciado por una constelaci√≥n especial"
- Si NO tienes nombre completo: "Para personalizar tu lectura astrol√≥gica, ¬øpodr√≠as decirme tu nombre?"
- Si tienes fecha de nacimiento: determina el signo con entusiasmo y explica sus caracter√≠sticas
- Si tienes datos completos: procede con an√°lisis completo del hor√≥scopo
- NUNCA hagas an√°lisis sin la fecha de nacimiento - siempre pide la informaci√≥n primero

üí¨ EJEMPLOS DE CONVERSACI√ìN NATURAL PARA RECOPILAR DATOS ASTROL√ìGICOS:
- "¬°Hola! Me da mucho gusto conocerte. Para descubrir tu signo celestial, necesito saber cu√°l es tu fecha de nacimiento. ¬øMe lo compartes?"
- "¬°Qu√© interesante! Los doce signos zodiacales tienen tanto que ense√±ar... Para comenzar, ¬øcu√°l es tu fecha de nacimiento?"
- "Me fascina poder ayudarte con esto. Cada fecha est√° bajo la influencia de una constelaci√≥n diferente, ¬øcu√°ndo celebras tu cumplea√±os?"
- SIEMPRE responde sin importar si el usuario tiene errores ortogr√°ficos o de escritura
  - Interpreta el mensaje del usuario aunque est√© mal escrito
  - No corrijas los errores del usuario, simplemente entiende la intenci√≥n
  - Si no entiendes algo espec√≠fico, pregunta de forma amigable
  - Ejemplos: "ola" = "hola", "k tal" = "qu√© tal", "mi signo" = "mi signo"
  - NUNCA devuelvas respuestas vac√≠as por errores de escritura
  
${conversationContext}

Recuerda: Eres una sabia astr√≥loga que muestra GENUINO INTER√âS PERSONAL por cada persona en su idioma nativo. Habla como una amiga sabia que realmente quiere conocer la fecha de nacimiento para poder compartir la sabidur√≠a de los astros. SIEMPRE enf√≥cate en obtener la fecha de nacimiento de forma conversacional y con inter√©s aut√©ntico. Las respuestas deben fluir naturalmente SIN repetir constantemente el nombre de la persona, adapt√°ndote perfectamente al idioma del usuario. Completa SIEMPRE tus interpretaciones horosc√≥picas - nunca dejes an√°lisis de signos a medias.`;
  }

  private generateHoroscopeDataSection(
    birthYear?: string,
    birthDate?: string,
    fullName?: string
  ): string {
    let dataSection = "DATOS DISPONIBLES PARA CONSULTA HOROSC√ìPICA:\n";

    if (fullName) {
      dataSection += `- Nombre: ${fullName}\n`;
    }

    if (birthDate) {
      const zodiacSign = this.calculateWesternZodiacSign(birthDate);
      dataSection += `- Fecha de nacimiento: ${birthDate}\n`;
      dataSection += `- Signo zodiacal calculado: ${zodiacSign}\n`;
    } else if (birthYear) {
      dataSection += `- A√±o de nacimiento: ${birthYear}\n`;
      dataSection +=
        "- ‚ö†Ô∏è DATO FALTANTE: Fecha completa de nacimiento (ESENCIAL para determinar el signo zodiacal)\n";
    }

    if (!birthYear && !birthDate) {
      dataSection +=
        "- ‚ö†Ô∏è DATO FALTANTE: Fecha de nacimiento (ESENCIAL para determinar el signo celestial)\n";
    }

    return dataSection;
  }

  private calculateWesternZodiacSign(dateStr: string): string {
    try {
      const date = new Date(dateStr);
      const month = date.getMonth() + 1;
      const day = date.getDate();

      if ((month === 3 && day >= 21) || (month === 4 && day <= 19))
        return "Aries ‚ôà";
      if ((month === 4 && day >= 20) || (month === 5 && day <= 20))
        return "Tauro ‚ôâ";
      if ((month === 5 && day >= 21) || (month === 6 && day <= 20))
        return "G√©minis ‚ôä";
      if ((month === 6 && day >= 21) || (month === 7 && day <= 22))
        return "C√°ncer ‚ôã";
      if ((month === 7 && day >= 23) || (month === 8 && day <= 22))
        return "Leo ‚ôå";
      if ((month === 8 && day >= 23) || (month === 9 && day <= 22))
        return "Virgo ‚ôç";
      if ((month === 9 && day >= 23) || (month === 10 && day <= 22))
        return "Libra ‚ôé";
      if ((month === 10 && day >= 23) || (month === 11 && day <= 21))
        return "Escorpio ‚ôè";
      if ((month === 11 && day >= 22) || (month === 12 && day <= 21))
        return "Sagitario ‚ôê";
      if ((month === 12 && day >= 22) || (month === 1 && day <= 19))
        return "Capricornio ‚ôë";
      if ((month === 1 && day >= 20) || (month === 2 && day <= 18))
        return "Acuario ‚ôí";
      if ((month === 2 && day >= 19) || (month === 3 && day <= 20))
        return "Piscis ‚ôì";

      return "Fecha inv√°lida";
    } catch {
      return "Error en c√°lculo";
    }
  }

  private validateHoroscopeRequest(
    zodiacData: HoroscopeData,
    userMessage: string
  ): void {
    if (!zodiacData) {
      const error: ApiError = new Error("Datos de la astr√≥loga requeridos");
      error.statusCode = 400;
      error.code = "MISSING_ASTROLOGER_DATA";
      throw error;
    }

    if (
      !userMessage ||
      typeof userMessage !== "string" ||
      userMessage.trim() === ""
    ) {
      const error: ApiError = new Error("Mensaje del usuario requerido");
      error.statusCode = 400;
      error.code = "MISSING_USER_MESSAGE";
      throw error;
    }

    if (userMessage.length > 1500) {
      const error: ApiError = new Error(
        "El mensaje es demasiado largo (m√°ximo 1500 caracteres)"
      );
      error.statusCode = 400;
      error.code = "MESSAGE_TOO_LONG";
      throw error;
    }
  }

  private handleError(error: any, res: Response): void {
    console.error("‚ùå Error en HoroscopeController:", error);

    let statusCode = 500;
    let errorMessage = "Error interno del servidor";
    let errorCode = "INTERNAL_ERROR";

    if (error.statusCode) {
      statusCode = error.statusCode;
      errorMessage = error.message;
      errorCode = error.code || "VALIDATION_ERROR";
    } else if (error.status === 503) {
      statusCode = 503;
      errorMessage =
        "El servicio est√° temporalmente sobrecargado. Por favor, intenta de nuevo en unos minutos.";
      errorCode = "SERVICE_OVERLOADED";
    } else if (
      error.message?.includes("quota") ||
      error.message?.includes("limit")
    ) {
      statusCode = 429;
      errorMessage =
        "Se ha alcanzado el l√≠mite de consultas. Por favor, espera un momento.";
      errorCode = "QUOTA_EXCEEDED";
    } else if (error.message?.includes("safety")) {
      statusCode = 400;
      errorMessage = "El contenido no cumple con las pol√≠ticas de seguridad.";
      errorCode = "SAFETY_FILTER";
    } else if (error.message?.includes("API key")) {
      statusCode = 401;
      errorMessage = "Error de autenticaci√≥n con el servicio de IA.";
      errorCode = "AUTH_ERROR";
    } else if (error.message?.includes("Respuesta vac√≠a")) {
      statusCode = 503;
      errorMessage =
        "El servicio no pudo generar una respuesta. Por favor, intenta de nuevo.";
      errorCode = "EMPTY_RESPONSE";
    }

    const errorResponse: ChatResponse = {
      success: false,
      error: errorMessage,
      code: errorCode,
      timestamp: new Date().toISOString(),
    };

    res.status(statusCode).json(errorResponse);
  }

  public getChineseZodiacInfo = async (
    req: Request,
    res: Response
  ): Promise<void> => {
    try {
      res.json({
        success: true,
        master: {
          name: "Astr√≥loga Luna",
          title: "Gu√≠a Celestial de los Signos",
          specialty: "Astrolog√≠a occidental y hor√≥scopo personalizado",
          description:
            "Sabia astr√≥loga especializada en interpretar las influencias celestiales y la sabidur√≠a de los doce signos zodiacales",
          services: [
            "Interpretaci√≥n de signos zodiacales",
            "An√°lisis de cartas astrales",
            "Predicciones horosc√≥picas",
            "Compatibilidades entre signos",
            "Consejos basados en astrolog√≠a",
          ],
        },
        timestamp: new Date().toISOString(),
      });
    } catch (error) {
      this.handleError(error, res);
    }
  };
}